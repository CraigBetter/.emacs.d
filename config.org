#+TITLE: Emacs Configuration
#+AUTHOR: Craig Best
* set variables to preserve sanity
TODO: split this up into sections
#+begin_src emacs-lisp :tangle yes
(setq make-backup-files nil) ; stop creating backup~ files, link: http://ergoemacs.org/emacs/emacs_set_backup_into_a_directory.html
(setq auto-save-default nil) ; stop creating #autosave# files

(setq auto-save-default nil) ;; sanity
(savehist-mode 0)  ;; sanity

(setq inhibit-splash-screen 1)
(scroll-bar-mode 0)
(tool-bar-mode 0)
(menu-bar-mode 0)

(global-display-line-numbers-mode)
;(setq display-line-numbers 'relative)

;(global-unset-key (kbd "C-x C-c"))

;(setq gc-cons-threshold 100000000)

; https://emacs.stackexchange.com/questions/22499/how-can-i-tell-emacs-to-always-open-help-buffers-in-the-current-window
; open help windows in buffer they were invoked from
;; (add-to-list 'display-buffer-alist
;;              '("*Help*" display-buffer-same-window))

;; make cursor blink forever in GUI
(setq blink-cursor-blinks 0)

;; for some bullshit reason C-, doesn't register in a tty or in the kitty terminal
;; and a cursory googling reveals no results. GET TO THE BOTTOM OF THIS!!!!
(define-key org-mode-map (kbd "C-c C-,") nil)
(define-key org-mode-map (kbd "C-c ,") 'org-insert-structure-template)


#+end_src

* setup melpa
  #+begin_src emacs-lisp :tangle yes
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
  (package-initialize)
  (when (not package-archive-contents)
      (package-refresh-contents))
  #+end_src
* use-package
#+begin_src emacs-lisp :tangle yes
;;(package-install 'use-package)
(if (not (package-installed-p 'use-package))
	 (package-install 'use-package))
#+end_src

* evil-mode
  link for :init code https://stackoverflow.com/questions/22878668/emacs-org-mode-evil-mode-tab-key-not-working
  ^that solves the problem where org-cycle is not bound to tab in evil-mode in a terminal
  #+begin_src emacs-lisp :tangle yes
  (use-package evil
    :ensure t
    :init   ;; run before loading evil-mode
    (setq evil-want-C-i-jump nil)
    :config ;; run after loading evil-mode
    (evil-mode 1))
  #+end_src
